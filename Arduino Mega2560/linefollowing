//left
//M1
int enA = 6;
int in1 = 22;
int in2 = 23;

//M2
int enB = 7;
int in3 = 25;
int in4 = 24;

//right
//M3
int enC = 4;
int in5 = 27;
int in6 = 26;

//M4
int enD = 5;
int in7 = 29;
int in8 = 28;



int L7 = A3;
int L6 = A5;
int L5 = A7;
int L4 = A9;
int L3 = A11;
int L2 = A13;
int L1 = A15;

int error;
int while_error;
int last_error;

int turn_error;
int last_turn_error;

int integral;
int derivative;


int Kp = 25;
int Kd = 0;
int Ki = 0;


int ref_speed = 200;
int offset_speed;

int max_speed;
int min_speed;

int left_speed;
int right_speed;

void setup() {

  Serial.begin(9600);
  pinMode(enA, OUTPUT);
  pinMode(enB, OUTPUT);
  pinMode(in1, OUTPUT);
  pinMode(in2, OUTPUT);
  pinMode(in3, OUTPUT);
  pinMode(in4, OUTPUT);



}


void mpower(int side, int p, int q) {
  int Pwm1, Pwm2;
  int A1, A2;
  int C1, C2;


  if (side == 1) {
    Pwm2 = enA;
    Pwm1 = enB;
    A1 = in3;
    A2 = in4;
    C1 = in1;
    C2 = in2;

    if (p > 0) {
      digitalWrite(A1, HIGH);
      digitalWrite(A2, LOW);
      analogWrite(Pwm1, p);
    }
    else if (p < 0) {
      digitalWrite(A1, LOW);
      digitalWrite(A2, HIGH);
      analogWrite(Pwm1, -p);
    }
    else {
      digitalWrite(A1, LOW);
      digitalWrite(A2, LOW);
      analogWrite(Pwm1, p);
    }
    if (q > 0) {
      digitalWrite(C1, HIGH);
      digitalWrite(C2, LOW);
      analogWrite(Pwm2, q);
    }
    else if (q < 0) {
      digitalWrite(C1, LOW);
      digitalWrite(C2, HIGH);
      analogWrite(Pwm2, -q);
    }
    else {
      digitalWrite(C1, LOW);
      digitalWrite(C2, LOW);
      analogWrite(Pwm2, q);
    }

  }

  else if (side == 2) {
    Pwm1 = enC;
    Pwm2 = enD;
    A1 = in5;
    A2 = in6;
    C1 = in7;
    C2 = in8;

    if (p > 0) {
      digitalWrite(A1, HIGH);
      digitalWrite(A2, LOW);
      analogWrite(Pwm1, p);
    }
    else if (p < 0) {
      digitalWrite(A1, LOW);
      digitalWrite(A2, HIGH);
      analogWrite(Pwm1, -p);
    }
    else {
      digitalWrite(A1, LOW);
      digitalWrite(A2, LOW);
      analogWrite(Pwm1, p);
    }
    if (q > 0) {
      digitalWrite(C1, HIGH);
      digitalWrite(C2, LOW);
      analogWrite(Pwm2, q);
    }
    else if (q < 0) {
      digitalWrite(C1, LOW);
      digitalWrite(C2, HIGH);
      analogWrite(Pwm2, -q);
    }
    else {
      digitalWrite(C1, LOW);
      digitalWrite(C2, LOW);
      analogWrite(Pwm2, q);
    }
  }
}





void loop() {

  int s1 = digitalRead(L1);
  int s2 = digitalRead(L2);
  int s3 = digitalRead(L3);
  int s4 = digitalRead(L4);
  int s5 = digitalRead(L5);
  int s6 = digitalRead(L6);
  int s7 = digitalRead(L7);


  Serial.print(s1);
  Serial.print("**");
  Serial.print(s2);
  Serial.print("**");
  Serial.print(s3);
  Serial.print("**");
  Serial.print(s4);
  Serial.print("**");
  Serial.print(s5);
  Serial.print("**");
  Serial.print(s6);
  Serial.print("**");
  Serial.print(s7);
  Serial.println("**");

  turn_error = s1 + s2 + s3 - s5 - s6 - s7;

  if (s1 == 0 && s2 == 0 && s3 == 1 && s4 == 1 && s5 == 1 && s6 == 0 && s7 == 0) {
    error = 0;
  }
  else if (s1 == 0 && s2 == 1 && s3 == 1 && s4 == 1 && s5 == 0 && s6 == 0 && s7 == 0) {
    error = 1;
  }
  else if (s1 == 0 && s2 == 1 && s3 == 1 && s4 == 1 && s5 == 1 && s6 == 0 && s7 == 0) {
    error = 2;
  }
  else if (s1 == 1 && s2 == 1 && s3 == 1 && s4 == 1 && s5 == 0 && s6 == 0 && s7 == 0) {
    error = 3;
  }
  else if (s1 == 1 && s2 == 1 && s3 == 1 && s4 == 0 && s5 == 0 && s6 == 0 && s7 == 0) {
    error = 4;
  }
  else if (s1 == 1 && s2 == 1 && s3 == 0 && s4 == 0 && s5 == 0 && s6 == 0 && s7 == 0) {
    error = 5;
  }
  else if (s1 == 1 && s2 == 0 && s3 == 0 && s4 == 0 && s5 == 0 && s6 == 0 && s7 == 0) {
    error = 6;
  }
  else if (s1 == 0 && s2 == 0 && s3 == 0 && s4 == 1 && s5 == 1 && s6 == 1 && s7 == 0) {
    error = -1;
  }
  else if (s1 == 0 && s2 == 0 && s3 == 1 && s4 == 1 && s5 == 1 && s6 == 1 && s7 == 0) {
    error = -2;
  }
  else if (s1 == 0 && s2 == 0 && s3 == 0 && s4 == 1 && s5 == 1 && s6 == 1 && s7 == 1) {
    error = -3;
  }
  else if (s1 == 0 && s2 == 0 && s3 == 0 && s4 == 0 && s5 == 1 && s6 == 1 && s7 == 1) {
    error = -4;
  }
  else if (s1 == 0 && s2 == 0 && s3 == 0 && s4 == 0 && s5 == 0 && s6 == 1 && s7 == 1) {
    error = -5;
  }
  else if (s1 == 0 && s2 == 0 && s3 == 0 && s4 == 0 && s5 == 0 && s6 == 0 && s7 == 1) {
    error = -6;
  }
  else if (s1 == 1 && s2 == 1 && s3 == 1 && s4 == 1 && s5 == 1 && s6 == 1 && s7 == 1) {
    error = 7;
  }
  else if (s1 == 0 && s2 == 0 && s3 == 0 && s4 == 0 && s5 == 0 && s6 == 0 && s7 == 0) {
    error = 8;
  }


  integral = error + last_error;
  derivative = error - last_error;
  offset_speed = Kp * error + Kd * derivative + Ki * integral;

  left_speed = ref_speed - offset_speed;
  right_speed = ref_speed + offset_speed;

  left_speed = constrain(left_speed, 150, 250);
  right_speed = constrain(right_speed, 150, 250);

  if (error != 7 && error != 8) {
    
      mpower(1, left_speed, left_speed);
      mpower(2, right_speed, right_speed);
      delay(20);
   
  }
  else if (error == 7 && last_error == 7) {
    mpower(1, 0, 0);
    mpower(2, 0, 0);
    delay(5);
  }
  else if (error == 8 && last_error == 6) {
    while (s1 == 0 && s2 == 0 && s3 == 0 && s4 == 0 && s5 == 0 && s6 == 0 && s7 == 0) {
      mpower(1, -250, -250);
      mpower(2, 250, 250);
      delay(200);
      s1 = digitalRead(L1);
      s2 = digitalRead(L2);
      s3 =  digitalRead(L3);
      s4 = digitalRead(L4);
      s5 = digitalRead(L5);
      s6 = digitalRead(L6);
      s7 = digitalRead(L7);
    }
  }
  else if (error == 8 && last_error == -6) {
    while (s1 == 0 && s2 == 0 && s3 == 0 && s4 == 0 && s5 == 0 && s6 == 0 && s7 == 0) {
      mpower(1, 250, 250);
      mpower(2, -250, -250);
      delay(200);
      s1 = digitalRead(L1);
      s2 = digitalRead(L2);
      s3 = digitalRead(L3);
      s4 = digitalRead(L4);
      s5 = digitalRead(L5);
      s6 =  digitalRead(L6);
      s7 =  digitalRead(L7);
    }
  }
  else if (error == 8 && last_turn_error > 0) { // turn 90 left
    if (last_error > 0) {
      mpower(1, -150, -150);
      mpower(2, -150, -150);
      delay(20);
      mpower(1, -250, -250);
      mpower(2, 250, 250);
      delay(270);
    }
  }
  else if (error == 8 && last_turn_error < 0) { //turn 90 right
    if (last_error < 0) {
      mpower(1, -150, -150);
      mpower(2, -150, -150);
      delay(20);
      mpower(1, 250, 250);
      mpower(2, -250, -250);
      delay(270);
    }
  }

  last_error = error;
  last_turn_error = turn_error;
}

