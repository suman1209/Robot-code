

void forwardleft(int speed){


pinMode(5,OUTPUT);
pinMode(6,OUTPUT);
pinMode(22,OUTPUT);
pinMode(23,OUTPUT);
pinMode(24,OUTPUT);
pinMode(25,OUTPUT);


//YELLOW LEFT
analogWrite(5,speed);
analogWrite(6,speed);
  
  //front left motors for frwD  (HLHL)BLACK
digitalWrite(22,HIGH);
digitalWrite(23,LOW);

//rear left motors for frwD  (HLHL) GREY
digitalWrite(24,HIGH);
digitalWrite(25,LOW);


  
}
void backwardleft(int speed){


pinMode(5,OUTPUT);
pinMode(6,OUTPUT);
pinMode(22,OUTPUT);
pinMode(23,OUTPUT);
pinMode(24,OUTPUT);
pinMode(25,OUTPUT);


//YELLOW LEFT
analogWrite(5,speed);
analogWrite(6,speed);
  
  //front left motors for frwD  (HLHL)BLACK
digitalWrite(22,LOW);
digitalWrite(23,HIGH);

//rear left motors for frwD  (HLHL) GREY
digitalWrite(24,LOW);
digitalWrite(25,HIGH);


  
}
void forwardright(int speed){
pinMode(3,OUTPUT);
pinMode(4,OUTPUT);
pinMode(10,OUTPUT);
pinMode(11,OUTPUT);
pinMode(12,OUTPUT);
pinMode(13,OUTPUT);


//WHITE RIGHT
analogWrite(3,speed);
analogWrite(4,speed);


//front right motors for frwD  (HLHL)VIOLET
digitalWrite(10,HIGH);
digitalWrite(11,LOW);
//rear right mtors for frwD  (HLHL) BLUE
digitalWrite(12,HIGH);
digitalWrite(13,LOW);
  
}
void backwardright(int speed){
pinMode(3,OUTPUT);
pinMode(4,OUTPUT);
pinMode(10,OUTPUT);
pinMode(11,OUTPUT);
pinMode(12,OUTPUT);
pinMode(13,OUTPUT);


//WHITE RIGHT
analogWrite(3,speed);
analogWrite(4,speed);


//front right motors for frwD  (HLHL)VIOLET
digitalWrite(10,LOW);
digitalWrite(11,HIGH);
//rear right motors for frwD  (HLHL) BLUE
digitalWrite(12,LOW);
digitalWrite(13,HIGH);
  
}

int position2;
int readline(){
  
int sensor1=47;//leftmost sensor
int sensor2=48;
int sensor3=49;
int sensor4=50;//centre sensor
int sensor5=51;
int sensor6=52;
int sensor7=53;//right most sensor
int l3=digitalRead(sensor1);//leftmost sensor
int l2=digitalRead(sensor2);
int l1=digitalRead(sensor3);
int c=digitalRead(sensor4);//centre sensor
int r1=digitalRead(sensor5);
int r2=digitalRead(sensor6);
int r3=digitalRead(sensor7);//rightmost sensor
int m =((l3*3000)+(l2*2000)+(l1*1000)+(c*0)+(r1*-1000)+(r2*-2000)+(r3*-3000))/(l3+l2+l1+c+r1+r2+r3);
return m;
}
void setup() {

Serial.begin(9600);

}

//black-----1
//white-----0

void loop() {
int sensor1=47;//leftmost sensor
int sensor2=48;
int sensor3=49;
int sensor4=50;//centre sensor
int sensor5=51;
int sensor6=52;
int sensor7=53;//right most sensor
int l3=digitalRead(sensor1);//leftmost sensor
int l2=digitalRead(sensor2);
int l1=digitalRead(sensor3);
int c=digitalRead(sensor4);//centre sensor
int r1=digitalRead(sensor5);
int r2=digitalRead(sensor6);
int r3=digitalRead(sensor7);//rightmost sensor

if (l3==1&l2==1&l1==0&c==0&r1==0&r2==1&r3==1){
  forwardleft(250);
  forwardright(250);
  
}
if (l3==1&l2==0&l1==0&c==0&r1==1&r2==1&r3==1){
  backwardleft(150);
  forwardright(250);
  
}
if (l3==1&l2==1&l1==1&c==0&r1==0&r2==0&r3==1){
  forwardleft(250);
  forwardright(0);
  
}
if (l3==1&l2==1&l1==0&c==0&r1==1&r2==1&r3==1){
  backwardleft(180);
  forwardright(250);
  
}
}
//Serial.print(l3);
//
//Serial.print(l2);
//
//Serial.print(l1);
//
//Serial.print(c);
//
//Serial.print(r1);
//
//Serial.print(r2);
//
//Serial.print(r3);
//Serial.println();
//delay(1000);



void PID(){
  
int power_difference;
float kp,ki,kd;
int derivative,proportional,integral=0,last_proportional=0;
unsigned int position;


while(1)
{
position=readline();
if (position==4000){
  forwardleft(250);
  forwardright(250);
}
else{
  Serial.println(position);
Serial.println(power_difference);
  kp=0.5;
  kd=0.2;
  ki=0.001;
proportional=position-4000;
derivative=proportional-last_proportional;
integral=integral+proportional;
last_proportional=proportional;
power_difference=(kp*proportional)+(kd*derivative)+(ki*integral);

delay(1000);
const int max=200;
if (power_difference>max)
{
  power_difference=max;
}
if (power_difference<-max){
  power_difference=-1*max;
}
if (power_difference<0)
{
  forwardright(max+power_difference);
  forwardleft(max-power_difference);
}
else{
  forwardright(max-power_difference);
  forwardleft(max+power_difference);
  
}
}

}}
